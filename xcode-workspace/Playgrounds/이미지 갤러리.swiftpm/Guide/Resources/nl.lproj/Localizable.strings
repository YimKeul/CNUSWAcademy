bplist00ﬂÄ	
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÄÅÇÉÑÖÇÜÇÇáàâäãÇåçéèêëíìîïñóÇòÇÇôöõúÇùûÇü†°¢Ç£§•Ç¶ÇßÇÇ®©™´¨ÇÇÇ≠ÆØÇ∞Ç±≤≥¥µ∂Ç∑∏πÇÇÇ∫ªºÇΩÇæø¿¡¬Ç√ÇÇƒÇÇ≈∆Ç«»…ÇÇ ÀÃÕŒÇœ–ÇÇÇÇ—“ÇÇ”ÇùÇ‘ù_UGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskaddAnImage..Page27..Paragraph38_QGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridItemView..Page12..title_XGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskisFavoriteItem..Page33..CodeBlock0_OGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridItemView..Paragraph20_YGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskisFavoriteItem..Page33..Paragraph46_MGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page20..title_SGuideBook..Guide0..StepImage Gallery..TaskGroup0..TaskdataModel..Page4..Paragraph11_HGuideBook..Guide0..StepImage Gallery..TaskGroup0..Taskitem..Page2..title_MGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page25..title_WGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridItemView..Page16..Paragraph25_[GuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..Page41..CodeBlock4_WGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridItemView..Page14..Paragraph23_WGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridItemView..Page12..Paragraph21_SGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page21..Paragraph31_MGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page24..title_YGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskisFavoriteItem..Page34..Paragraph47_SGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page24..Paragraph34_YGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskisFavoriteItem..Page34..Paragraph48_SGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page19..Paragraph29_NGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..title_[GuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskdetailViewToggle..Page36..Paragraph52_`GuideBook..Guide0..StepImage Gallery..LearningCenterContent..GuideButtonStart Walkthrough..title_[GuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskdetailViewToggle..Page36..Paragraph51_UGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskaddAnImage..Page29..Paragraph40_YGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskisFavoriteItem..Page32..Paragraph45_YGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskisFavoriteItem..Page32..Paragraph44_UGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskaddAnImage..Page26..Paragraph37_MGuideBook..Guide0..StepImage Gallery..TaskGroup0..TaskdataModel..Page5..title_UGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskaddAnImage..Page30..Paragraph41_SGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskisFavoriteItem..Page34..title_OGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskaddAnImage..Page31..title_[GuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskdetailViewToggle..Page37..Paragraph53_WGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskphotoGridApp..Page10..Paragraph18_GGuideBook..Guide0..StepImage Gallery..LearningCenterContent..Paragraph1_OGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskphotoGridApp..Paragraph16_MGuideBook..Guide0..StepImage Gallery..TaskGroup0..TaskdataModel..Page4..title_+GuideBook..Guide0..StepImage Gallery..title_GGuideBook..Guide0..StepImage Gallery..LearningCenterContent..Paragraph3_VGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..Page41..title_UGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskaddAnImage..Page31..Paragraph42_SGuideBook..Guide0..StepImage Gallery..TaskGroup0..TaskdataModel..Page7..Paragraph14_MGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskdetailViewToggle..title_[GuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..Page40..CodeBlock3_OGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskaddAnImage..Page29..title_7GuideBook..Guide0..StepImage Gallery..TaskGroup0..title_SGuideBook..Guide0..StepImage Gallery..TaskGroup0..TaskdataModel..Page5..Paragraph12_TGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..Paragraph55_MGuideBook..Guide0..StepImage Gallery..TaskGroup0..TaskdataModel..Page8..title_MGuideBook..Guide0..StepImage Gallery..TaskGroup0..Taskitem..Page1..Paragraph7_OGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskaddAnImage..Page30..title_\GuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..Page42..Paragraph62_VGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..Page39..title_HGuideBook..Guide0..StepImage Gallery..TaskGroup0..Taskitem..Page1..title_SGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskdetailViewToggle..Paragraph49_SGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page22..Paragraph32_SGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page25..Paragraph35_MGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskaddAnImage..Paragraph36_FGuideBook..Guide0..StepImage Gallery..TaskGroup0..TaskdataModel..title_MGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page23..title_OGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskaddAnImage..Page28..title_SGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskisFavoriteItem..Page32..title_WGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridItemView..Page17..Paragraph26_2GuideBook..WelcomeMessageImage Gallery..Paragraph0_WGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridItemView..Page15..Paragraph24_MGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page22..title_KGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Paragraph27_PGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskphotoGridApp..Page9..title_WGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridItemView..Page13..Paragraph22_[GuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskdetailViewToggle..Page38..Paragraph54_KGuideBook..Guide0..StepImage Gallery..TaskGroup0..TaskdataModel..Paragraph9_FGuideBook..Guide0..StepImage Gallery..TaskGroup0..Taskitem..Paragraph5_ZGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskdetailViewToggle..Page37..CodeBlock2_AGuideBook..Guide0..StepImage Gallery..TaskGroup0..Taskitem..title_MGuideBook..Guide0..StepImage Gallery..TaskGroup0..TaskdataModel..Page3..title_SGuideBook..Guide0..StepImage Gallery..TaskGroup0..TaskdataModel..Page8..Paragraph15_\GuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..Page41..Paragraph61_GGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskaddAnImage..title_QGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskphotoGridApp..Page11..title_MGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page19..title_UGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskdetailViewToggle..Page37..title_\GuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..Page41..Paragraph60_\GuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..Page39..Paragraph57_SGuideBook..Guide0..StepImage Gallery..TaskGroup0..TaskdataModel..Page3..Paragraph10_OGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskaddAnImage..Page27..title_SGuideBook..Guide0..StepImage Gallery..TaskGroup0..TaskdataModel..Page6..Paragraph13_QGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskphotoGridApp..Page10..title_fGuideBook..Guide0..StepImage Gallery..LearningCenterContent..GuideButtonStart Walkthrough..description_ZGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskdetailViewToggle..Page36..CodeBlock1_\GuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..Page39..Paragraph56_WGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskphotoGridApp..Page11..Paragraph19_KGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskisFavoriteItem..title_QGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridItemView..Page17..title_IGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridItemView..title_UGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskdetailViewToggle..Page35..title_SGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskisFavoriteItem..Page33..title_MGuideBook..Guide0..StepImage Gallery..TaskGroup0..Taskitem..Page0..Paragraph6_MGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page18..title_MGuideBook..Guide0..StepImage Gallery..TaskGroup0..TaskdataModel..Page7..title_7GuideBook..Guide0..StepImage Gallery..TaskGroup2..title_GGuideBook..Guide0..StepImage Gallery..LearningCenterContent..Paragraph2_UGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskdetailViewToggle..Page38..title_VGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskphotoGridApp..Page9..Paragraph17_\GuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..Page40..Paragraph59_SGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page20..Paragraph30_QGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridItemView..Page16..title_VGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..Page40..title_GGuideBook..Guide0..StepImage Gallery..LearningCenterContent..Paragraph4_[GuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskdetailViewToggle..Page35..Paragraph50_MGuideBook..Guide0..StepImage Gallery..TaskGroup0..Taskitem..Page2..Paragraph8_SGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page18..Paragraph28_SGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page23..Paragraph33_HGuideBook..Guide0..StepImage Gallery..TaskGroup0..Taskitem..Page0..title_UGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskaddAnImage..Page28..Paragraph39_\GuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..Page40..Paragraph58_VGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskgridViewFavorites..Page42..title_UGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskdetailViewToggle..Page36..title_QGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridItemView..Page15..title_MGuideBook..Guide0..StepImage Gallery..TaskGroup0..TaskdataModel..Page6..title_QGuideBook..Guide0..StepImage Gallery..TaskGroup2..TaskisFavoriteItem..Paragraph43_EGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..title_QGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridItemView..Page14..title_OGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskaddAnImage..Page26..title_7GuideBook..Guide0..StepImage Gallery..TaskGroup1..title_MGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridView..Page21..title_GuideBook..title_QGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskgridItemView..Page13..title_IGuideBook..Guide0..StepImage Gallery..TaskGroup1..TaskphotoGridApp..title_-GuideBook..WelcomeMessageImage Gallery..title_…Om je fotoraster te bewerken, gebruik je de [statuswaarde](glossary://state%20value) `isEditing`. Je voegt op elke afbeelding een verwijderknop (x) toe wanneer de waarde naar `true` wordt omgeschakeld.P_```var isFavorite = false
```_∏Ontdek hoe je een afbeelding [asynchroon](glossary://asynchronous%20process) vanuit een URL kunt laden met [AsyncImage](doc://com.apple.documentation/documentation/swiftui/asyncimage)._oOm te beginnen, ga je een eigenschap aan `Item` toevoegen zodat de app de favoriete afbeeldingen kan bijhouden:_r`DataModel` publiceert een array met `item`-waarden die allemaal met een afbeelding in het raster overeenkomen. In de code is deze waarde gemarkeerd als `@Published`. Hierdoor werkt SwiftUI de rasterweergave (en alle andere weergaven die deze waarde gebruiken) bij om deze wijzigingen weer te geven wanneer je een `Item` aan de array toevoegt of uit de array verwijdert._q`AsyncImage` bevat een `content`-[closure](glossary://closure) die een [instantie](glossary://instance) van een SwiftUI-`Image` biedt. Je gebruikt deze instantie om de afbeeldingsweergave aan te maken. Je gaat de modifiers `.resizable` en `.aspectRatio(contentMode: .fill)` toevoegen om de afbeelding te schalen zodat de beschikbare ruimte van de weergave wordt gevuld._…```if item.isFavorite {
   Image(systemName: "heart.fill")
       .foregroundColor(.white)
       .shadow(color: .black.opacity(0.3), radius: 5)
       .font(.callout)
       .offset(x: 4, y: -4)
}
```_In de `body` van je `GridItemView` maak je je afbeeldingsweergave aan. Aangezien je een voorwaardelijke bewerkingsinterface bovenop je afbeelding gaat plaatsen, plaats je de afbeelding in een [ZStack](doc://com.apple.documentation/documentation/swiftui/zstack)._¢`GridItemView` vertegenwoordigt een enkel onderdeel van je raster, een afbeeldingsweergave die de foto weergeeft die door een `Item`-instantie wordt gedefinieerd._Om het raster aan te maken, nest je een [LazyVGrid](doc://com.apple.documentation/documentation/swiftui/lazyvgrid) binnen een [ScrollView](doc://com.apple.documentation/documentation/swiftui/scrollview), waarmee de inhoud van het raster zo nodig verticaal kan scrollen._dNu kun je de waarde van `isFavorite` wijzigen voor elke [instantie](glossary://instance) van `Item`._–Om de code in `GridView` te vereenvoudigen, genereer je elke weergave van het raster met een `GridItemView`, die al het asynchrone laden van afbeeldingen en de overgangen tussen bewerkingsstatussen afhandelt._dVervolgens maak je een knop aan waarmee je de waarde `isFavorite` vanuit `DetailView` kunt wijzigen.oQ V o o r   t o e g a n g   t o t   h e t   ` d a t a M o d e l `   v a n   d e   a p p   d e f i n i e e r   j e   e e n   ` @ E n v i r o n m e n t O b j e c t `   v a n   h e t   t y p e   ` D a t a M o d e l ` ,   w a a r m e e   j e   t o e g a n g   k r i j g t   t o t   h e t   [ o m g e v i n g s o b j e c t ] ( g l o s s a r y : / / e n v i r o n m e n t % 2 0 o b j e c t )   d a t   w o r d t   d o o r g e g e v e n   a a n   d e   w e e r g a v e   o p   h e t   h o o g s t e   n i v e a u   v a n   d e   [ w e e r g a v e h i Î r a r c h i e ] ( g l o s s a r y : / / v i e w % 2 0 h i e r a r c h y )   i n   ` I m a g e G a l l e r y A p p . s w i f t ` ._Favorieten weergeven_ìHiermee geef je een effen hartje weer als de afbeelding als favoriet is gemarkeerd, en de omtrek van een hartje als de afbeelding geen favoriet is._Start walkthrough_4Voeg de `Button` onder de weergave `AsyncImage` toe._gWanneer `isEditing` de waarde `true` heeft, wordt op de afbeeldingen een verwijderknop (x) weergegeven._íAls je weet hoe je dit kunt doen, probeer deze functionaliteit dan zelf toe te voegen. Gebruik de volgende instructies als je vast komt te zitten._áStel dat je de beste afbeeldingen in je galerie als favoriet wilt kunnen markeren. Kun je bedenken hoe je dit zou kunnen implementeren?_ΩOm een nieuwe foto aan het raster toe te voegen, gebruik je de statuswaarde `isAddingPhoto`. Je schakelt deze waarde om naar `true` wanneer je op de toevoegknop (+) in de knoppenbalk drukt._:Wanneer een gebruiker op de verwijderknop (x) tikt, verwijdert de code het huidige onderdeel uit `dataModel.items`. Omdat `dataModel.items` een [gepubliceerde waarde](glossary://published%20value) is, zorgt deze wijziging ervoor dat SwiftUI het uiterlijk van de rasterweergave bijwerkt en het onderdeel verwijdert._NOm de knop er beter uit te laten zien, kun je de volgende modifiers toevoegen:_≥Om `dataModel` als [statusobject](glossary://state%20object) aan te maken, pas je de [eigenschapwrapper](glossary://property%20wrapper) `@StateObject` toe en geef je een beginwaarde op die voldoet aan het `ObservableObject`-protocol. SwiftUI beheert de opslag voor een statusobject en werkt alle [subweergaven](glossary://subview) bij die de waarde gebruiken wanneer de [gepubliceerde waarden](glossary://published%20value) veranderen.^![](intro.png)op L e e r   h o e   d e   a p p   f o t o g e g e v e n s   v a n   ` D a t a M o d e l `   d o o r g e e f t   a a n   d e   [ w e e r g a v e h i Î r a r c h i e ] ( g l o s s a r y : / / v i e w % 2 0 h i e r a r c h y ) ._Afbeeldingengalerij_>De app Afbeeldingengalerie is een uitbreiding op twee eenvoudigere implementaties: 'Ordenen met rasters' en 'Rasters bewerken'. Deze walkthrough richt zich op het oplossen van enkele veelvoorkomende problemen die zich kunnen voordoen bij de weergave van afbeeldingen, in plaats van vormen of SF-symbolen, in je raster._LWanneer `isAddingPhoto` de waarde `true` heeft, wordt een modale `PhotoPicker`-weergave in een paneel getoond. Als de gebruiker in `PhotoPicker` een nieuwe foto selecteert, wordt het bijbehorende `item` toegevoegd aan `DataModel.items`. Dit zorgt ervoor dat SwiftUI de rasterweergave bijwerkt en de bijbehorende afbeelding toevoegt._`DataModel` biedt methoden voor het toevoegen van elementen aan `items` en het verwijderen van elementen uit `items`. Met `addItem` voeg je een nieuw element toe aan de eerste index van de array, zodat je kunt zien wanneer nieuwe afbeeldingen in de weergave worden weergegeven._Favorieten in- en uitschakelen_]```.overlay(alignment: .bottomLeading) {
    //#-learning-code-snippet(checkIsFavorite)
}
```_Het raster modelleren_çWanneer je `DataModel` [initialiseert](glossary://initialization), wordt in de documentdirectory gezocht naar afbeeldingen die je hebt toegevoegd, worden de bijbehorende URL's verzameld en worden deze aan de `items`-array toegevoegd. Je app slaat gegevens lokaal op in deze directory. Als je hier dus zoekt, kun je alle afbeeldingen weergeven die je tijdens het gebruik van de app hebt toegevoegd._EGeef een afbeelding van een hartje op je favoriete afbeeldingen weer._ÇJe `Item` bevat een [eigenschap](glossary://property) `id`, die door SwiftUI wordt gebruikt om de weergave uniek te identificeren._≤Markeer nu een paar afbeeldingen als favoriet en kijk hoe `GridView` verandert. Ga door met het aanpassen van je implementatie totdat alles er precies zo uitziet als je dat wilt._ÄVoeg een schakelaar toe waarmee je een item vanuit `DetailView` als favoriet kunt markeren en deze markering weer kunt opheffen._ıJe [ForEach](doc://com.apple.documentation/documentation/swiftui/foreach)-lus itereert door `dataModel.items` en maakt een `GridItemView` op basis van elke `item`-waarde in de array. Omdat elke `item`-instantie [Identifiable](doc://com.apple.documentation/documentation/swift/identifiable) is, heb je geen `id`-[parameter](glossary://parameter) nodig bij het aanmaken van je rasterweergaven. In plaats daarvan gebruikt SwiftUI de eigenschap `id` van elk `item` om het op unieke wijze te identificeren._YOm `GridItemView` te initialiseren, geef je het huidige `item` uit de `ForEach`-lus door._<Leer hoe je foto's in de galerie kunt toevoegen en bewerken._+Gegevensmodel: afbeeldings-URL's verzamelen_`AsyncImage` gebruikt een plaatsaanduiding om wat materiaal weer te geven terwijl de afbeelding wordt geladen. De plaatsaanduiding gebruikt een SwiftUI-[ProgressView](doc://com.apple.documentation/documentation/swiftui/progressview) die als een draaiende cirkel wordt weergegeven._ãIn deze walkthrough leer je hoe je een raster met afbeeldingen kunt aanmaken, compleet met functies voor het kiezen en bewerken van foto's._˘Je kunt een [AsyncImage](doc://com.apple.documentation/documentation/swiftui/asyncimage) initialiseren met de `item.url`-waarde om de afbeelding [asynchroon](glossary://asynchronous%20process) te laden. Omdat er veel afbeeldingen moeten worden geladen wanneer de app voor het eerst wordt gestart, kun je ze asynchroon laden zodat de app de rest van de code kan blijven uitvoeren terwijl de app wacht tot de afbeeldingen worden geretourneerd. Dit voorkomt een merkbare vertraging in je gebruikersinterface._ìLeer hoe je een rasterweergave samenstelt met behulp van een reeks ingebouwde en [samengestelde weergaven](glossary://composed%20view) van SwiftUI._uEen `GridItemView` bevat een eigenschap voor `item`, die de URL biedt waarmee de afbeelding asynchroon wordt geladen._îGeweldig! Nu je een manier hebt om een afbeelding als favoriet te markeren, is het tijd om al je favoriete afbeeldingen in `GridView` weer te geven._XLeer hoe je app een gegevensmodel gebruikt om alle fotogegevens te laden en op te slaan._QOnderzoek hoe je een raster modelleert met een [structuur](glossary://structure)._¥```.buttonStyle(.plain)
.labelStyle(.iconOnly)
.padding(EdgeInsets(top: 20, leading: 30, bottom: 20, trailing: 30))
.background(Color.secondary.colorInvert())
.cornerRadius(15)
```_Een onderdeel modelleren_áMet `removeItem` verwijder je een element door de index ervan te vinden en het element vervolgens uit de `items`-array te verwijderen. De methode verwijdert ook het bijbehorende afbeeldingsbestand van het element uit de documentdirectory, als het daar bestaat. Dit zorgt ervoor dat de afbeelding bij het volgende keer starten van de app niet opnieuw vanuit de lokale appopslag wordt geladen._{Als de afbeelding favoriet is, toon je een afbeelding van een hartje op de voorste benedenhoek van de `Rectangle`-weergave._'Een afbeelding toevoegen aan de galerie_\Je kunt voorwaardelijke code gebruiken om te controleren of deze afbeelding een favoriet is._DProbeer dit zelf te doen. Gebruik de volgende tips als dat nodig is._<`DataModel` is een [observeerbaar object](glossary://observable%20object) dat bestands-URL's verzamelt uit afbeeldingen in je documentdirectory en uit de [bundel](glossary://bundle)resources van je app. Het gebruikt de URL's om een array met `Item`-instanties te vullen die als inhoud in je raster wordt weergegeven._Op dezelfde manier laad je alle afbeeldings-URL's uit de resourcedirectory in de hoofd[bundel](glossary://bundle) van de app en voeg je ze aan `items` toe. Deze bundel bevat een directory met afbeeldingen van het project, in tegenstelling tot afbeeldingen die je zelf toevoegt._'Toegankelijkheidsbeschrijving voor knop_©```Button { 
    item.isFavorite.toggle()
} label: { 
    Label("Favoriet", systemImage: item.isFavorite ? "heart.fill" : "heart")
        .font(.system(size: 24))
}
```_ÇOm je favorieten in `GridView` weer te geven, voeg je een afbeelding van een hartje als overlay aan je favoriete afbeeldingen toe._PDe [NavigationStack](doc://com.apple.documentation/documentation/swiftui/navigationstack)-structuur geeft de [instantie](glossary://instance) `DataModel` door met behulp van de `.environmentObject`-modifier, waardoor het [observeerbare object](glossary://observable%20object) beschikbaar is voor alle [subweergaven](glossary://subview) in de `NavigationStack`. Hierdoor hebben deze weergaven toegang tot de gegevens van `dataModel` om verschillende taken uit te voeren, zoals het asynchroon laden van afbeeldingsweergaven of het bijwerken van de rasterweergave wanneer de gegevens veranderen._1Een nieuwe eigenschap aan een onderdeel toevoegen_Een rasteronderdeel aanmaken_ÃWanneer je `ForEach` gebruikt om een verzamelingsweergave, zoals een lijst of een raster, samen te stellen, wil SwiftUI elke weergave op een unieke wijze kunnen identificeren zodat deze kan worden gevonden en bijgewerkt. Om dit gemakkelijker te maken, kun je een model aanmaken dat [zich conformeert](glossary://conform) aan [Identifiable](doc://com.apple.documentation/documentation/swift/identifiable/), waarmee een `id`-eigenschapsvereiste wordt aangemaakt._Foto's favoriet maken_éIn Afbeeldingengalerie leer je hoe je een raster met afbeeldingen kunt aanmaken, compleet met functies voor het kiezen en bewerken van foto's._rAfbeeldingengalerie laadt een galerie met afbeeldingen wanneer je de app voor de eerste keer start. Omdat de afbeeldingen groot zijn en je niet wilt dat de app vertraagt wanneer je ze allemaal tegelijkertijd laadt, gebruik je [asynchrone](glossary://asynchronous%20process) verzoeken om de app responsief te houden, zelfs wanneer het ophalen van gegevens traag verloopt._%Je kunt overigens nog een andere weergave over de `Rectangle`-weergave heen leggen door nog een `.overlay`-modifier onder de eerste toe te voegen. Door `.bottomLeading` voor het argument `alignment` te gebruiken, worden de afbeeldingen met de voorste benedenhoek van de `Rectangle` uitgelijnd._†De gegevens voor het vullen van het raster komen uit een array met `Item`-instanties (uit `dataModel.items`), die elk verwijzen naar een enkele afbeeldings-URL._NGrotere afbeeldingen worden mogelijk langzaam geladen, wat kan leiden tot merkbare vertragingen bij het laden van de gebruikersinterface van je app. Deze walktrough richt zich op de omgang met vertragingen door voortgangsindicatoren weer te geven tijdens het laden van elke afbeelding en je app tijdens het laden responsief te houden._·Nu moet je een manier toevoegen om een van je afbeeldingen als favoriet te markeren. Je kunt dit doen door een `Button` aan je `DetailView` toe te voegen die `item.isFavorite.toggle()` aanroept wanneer iemand op de knop tikt._¯`Item` heeft ook een eigenschap `url`, die de app gebruikt om de locatie van de bijbehorende afbeelding te identificeren met behulp van een pad naar het bestand. `AsyncImage` gebruikt deze URL in `GridItemView` om de afbeelding asynchroon te laden._é`GridView` is waar je je afbeeldingengalerie aanmaakt. Als je de basisprincipes voor het aanmaken van een raster nog eens wilt doornemen, bekijk dan [Ordenen met rasters](x-com-apple-playgrounds://projects?contentId=com.apple.playgrounds.organizingwithgrids). In deze walkthrough leer je hoe je het raster implementeert met behulp van een modeltype, `Item`, en een waarneembaar object, `dataModel`._ªOm alle afbeeldingen als even grote vierkanten in het raster weer te geven, maak je een `Rectangle`-weergave aan en stel je de verhouding in op een waarde van `1`. Zo render je een rechthoek met een gelijke breedte en lengte, waardoor een vierkant ontstaat. Vervolgens kun je je afbeelding als overlay op dat vierkant weergeven met `GridItemView`. De grootte van de afbeelding wordt hierbij aangepast aan de beschikbare ruimte in het vierkant.o‰ D e   ` . t o o l b a r ` - m o d i f i e r   b e v a t   t w e e   k n o p p e n b a l k o n d e r d e l e n :   È È n   o m   f o t o ' s   i n   h e t   r a s t e r   t e   b e w e r k e n   e n   È È n   o m   e e n   n i e u w e   f o t o   t o e   t e   v o e g e n .   D e z e   k n o p p e n   s c h a k e l e n   r e s p e c t i e v e l i j k   d e   s t a t u s w a a r d e n   ` i s E d i t i n g `   e n   ` i s A d d i n g P h o t o `   o m ._⁄In `GridView` is elke afbeelding een `NavigationLink` met `DetailView` als [doel](glossary://destination%20view) en een [label](glossary://label) van een `Rectangle`-weergave waar een `GridItemView` overheen is gelegd._0Voeg de eigenschap `isFavorite` aan `Item` toe`._Je galerie aanmaken_Het raster aanmaken_Appgegevens delen c∑d¿f±[πm√o≈!w»&âÁ	?	õ	˜
O
ü
˜Mü˝W°ÛCqªl¬p¬¸R©˘Iõ˙SûÙJ†9â€1ã¿j∏e√Z∑˚K° JûÓF•Z¨Vø{’#w√  q ¡!!a!õ!Â"="ñ"ı#K#ü#¯$B$†$%F%ú%Á&?&û&˜'O'£'Û(G(è(„)5)o)ø)“*&*r*¢+n+o+è,J,º.2/ß0s1|2!323ô4l4”7y7ê8&8:8q8€9p9˙:∫;¯<I> >>Ú?@JAöB≥B‘C4CLD›E%E™F_F‚H€I7IvI§J¿KNMKM·NYNOKOüPVPqQ¸RzR§SSJTäU£UÕVyV˛YRYÜY•[u[ç\]î^Ω_``≤añbëd#e‚g≠hähΩh”hÈ             ’              h˝